{
  "contractName": "ZombieAttack",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "newZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalZombies",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"newZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalZombies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Studies/Projects/Zombie/src/contracts/ZombieAttack.sol\":\"ZombieAttack\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Studies/Projects/Zombie/src/contracts/Ownable.sol\":{\"keccak256\":\"0x212024923a201fdb3b23a11331db3fc31f4daefb40c3714df4b547d788d168fb\",\"urls\":[\"bzz-raw://7f3898251568d9d6f1d78d1785af2cd32de13fb07dcad5b92bd2074f32ddd1e1\",\"dweb:/ipfs/QmXXUVwwQHcXnD3mU5aaHy3YHM4XzjDo5a8Cs3GDnFLnpr\"]},\"/D/Studies/Projects/Zombie/src/contracts/ZombieAttack.sol\":{\"keccak256\":\"0xd53338ed92866a519b623e516044191cde988e618b2e517781284ceebac94866\",\"urls\":[\"bzz-raw://37fe24486f8af925bd0741aa35179ef63f0df469dd6455f6fd9c8daee3644bbd\",\"dweb:/ipfs/QmQmfUcGJLaNb8K3bJgV9RVBmQojoxDqRQk5uvuZyZwn3K\"]},\"/D/Studies/Projects/Zombie/src/contracts/ZombieFactory.sol\":{\"keccak256\":\"0xf8171e433aa4cc6bb2ad3c5b6a3943e620d849d7e9737348361aa6aacf5c1e52\",\"urls\":[\"bzz-raw://8f38b73165eb4512d634d3c187df50d665b203dbacbeeabdd968b197cc32dc06\",\"dweb:/ipfs/QmU1NoNPEfTujyz8XRPCLXLns3AXutfuogY33fzJpD48qC\"]},\"/D/Studies/Projects/Zombie/src/contracts/ZombieFeeding.sol\":{\"keccak256\":\"0x1d86b4f3f6c6254d56422cc697a22490cc53e8b5e284191d89e1955e2198695f\",\"urls\":[\"bzz-raw://7858a71040f1f236b8ba89a81618157756c56cbe84f3fde843fd77ae3e68788a\",\"dweb:/ipfs/QmPZKoxuk4EQNrqXire1PrhPbXg5mMQ6SKNoFFf7cotAo1\"]},\"/D/Studies/Projects/Zombie/src/contracts/zombiehelper.sol\":{\"keccak256\":\"0x4a3dbfadd91bc974c23b866ef42d19082045e39506d2724083998420d9f0769d\",\"urls\":[\"bzz-raw://0404f948c9d95327a02a3f21ba9b13560776d7f7c416c60f4ddb4261a29323ed\",\"dweb:/ipfs/QmaifuN1YQsUKfWNRC3LihVbpL1pSwBywm4mw5Lt6ZKE16\"]}},\"version\":1}",
  "bytecode": "0x608060405260006001556010600555600554600a0a6006556201518060075566038d7ea4c680006009556000600a556046600b55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611b7a806100fe6000396000f3fe6080604052600436106100fe5760003560e01c8063715018a611610095578063aa914e6a11610064578063aa914e6a14610512578063c39cbef1146105da578063ccf670f81461066a578063e1fa7638146106a5578063f2fde38b146106ea576100fe565b8063715018a61461044a5780638da5cb5b146104615780638f32d59b146104b8578063a57ea378146104e7576100fe565b80633ccfd60b116100d15780633ccfd60b146102f75780634412e1041461030e5780635f4623f1146103b45780635faf288014610405576100fe565b80630ce90ec21461010357806317a7f4cc146101315780632052465e1461017657806327b7612f1461027c575b600080fd5b61012f6004803603602081101561011957600080fd5b810190808035906020019092919050505061073b565b005b34801561013d57600080fd5b506101746004803603604081101561015457600080fd5b81019080803590602001909291908035906020019092919050505061079b565b005b34801561018257600080fd5b506101af6004803603602081101561019957600080fd5b8101908080359060200190929190505050610926565b60405180888152602001806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b8381101561023b578082015181840152602081019050610220565b50505050905090810190601f1680156102685780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561028857600080fd5b506102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050610a3c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030357600080fd5b5061030c610a6f565b005b34801561031a57600080fd5b5061035d6004803603602081101561033157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aed565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103a0578082015181840152602081019050610385565b505050509050019250505060405180910390f35b3480156103c057600080fd5b50610403600480360360208110156103d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c17565b005b34801561041157600080fd5b506104486004803603604081101561042857600080fd5b810190808035906020019092919080359060200190929190505050610c5b565b005b34801561045657600080fd5b5061045f610d90565b005b34801561046d57600080fd5b50610476610e60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c457600080fd5b506104cd610e89565b604051808215151515815260200191505060405180910390f35b3480156104f357600080fd5b506104fc610ee0565b6040518082815260200191505060405180910390f35b34801561051e57600080fd5b506105d86004803603602081101561053557600080fd5b810190808035906020019064010000000081111561055257600080fd5b82018360208201111561056457600080fd5b8035906020019184600183028401116401000000008311171561058657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ee6565b005b3480156105e657600080fd5b50610668600480360360408110156105fd57600080fd5b81019080803590602001909291908035906020019064010000000081111561062457600080fd5b82018360208201111561063657600080fd5b8035906020019184600183028401116401000000008311171561065857600080fd5b9091929391929390505050610f0f565b005b34801561067657600080fd5b506106a36004803603602081101561068d57600080fd5b8101908080359060200190929190505050611050565b005b3480156106b157600080fd5b506106e8600480360360408110156106c857600080fd5b81019080803590602001909291908035906020019092919050505061106b565b005b3480156106f657600080fd5b506107396004803603602081101561070d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611290565b005b600954341461074957600080fd5b60026000828152602001908152602001600020600301600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561081157600080fd5b505afa158015610825573d6000803e3d6000fd5b505050506040513d61014081101561083c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061092183826040518060400160405280600581526020017f6b697474790000000000000000000000000000000000000000000000000000008152506112ad565b505050565b6002602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d85780601f106109ad576101008083540402835291602001916109d8565b820191906000526020600020905b8154815290600101906020018083116109bb57829003601f168201915b5050505050908060020154908060030160009054906101000a900463ffffffff16908060030160049054906101000a900463ffffffff16908060030160089054906101000a900461ffff169080600301600a9054906101000a900461ffff16905087565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a77610e89565b610a8057600080fd5b6000610a8a610e60565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610ae9573d6000803e3d6000fd5b5050565b606080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610b5e5781602001602082028038833980820191505090505b50905060008090506000600190505b6001548111610c0c578473ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bff5780838381518110610bea57fe5b60200260200101818152505081806001019250505b8080600101915050610b6d565b508192505050919050565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b601482816002600083815260200190815260200160002060030160009054906101000a900463ffffffff1663ffffffff161015610c9757600080fd5b836003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0357600080fd5b6003600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6e57600080fd5b8360026000878152602001908152602001600020600201819055505050505050565b610d98610e89565b610da157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015481565b6000815111610ef457600080fd5b6000610eff82611487565b9050610f0b828261151b565b5050565b600283816002600083815260200190815260200160002060030160009054906101000a900463ffffffff1663ffffffff161015610f4b57600080fd5b846003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fb757600080fd5b6003600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461102257600080fd5b8484600260008981526020019081526020016000206001019190611047929190611a20565b50505050505050565b611058610e89565b61106157600080fd5b8060098190555050565b816003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110d757600080fd5b6000600260008581526020019081526020016000209050600060026000858152602001908152602001600020905060006111116064611848565b9050600b5481116112105782600301600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600301600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600301600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505061120b8683600201546040518060400160405280600681526020017f7a6f6d62696500000000000000000000000000000000000000000000000000008152506112ad565b611288565b82600301600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600301600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff16021790555050611287836118d7565b5b505050505050565b611298610e89565b6112a157600080fd5b6112aa81611901565b50565b826003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461131957600080fd5b6000600260008681526020019081526020016000209050611339816119f9565b61134257600080fd5b600654848161134d57fe5b06935060006002858360020154018161136257fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b602083106113e357805182526020820191506020810190506020830392506113c0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156114375760636064828161143057fe5b0682030190505b6114766040518060400160405280600681526020017f4e6f4e616d6500000000000000000000000000000000000000000000000000008152508261151b565b61147f826118d7565b505050505050565b600080826040516020018082805190602001908083835b602083106114c1578051825260208201915060208101905060208303925061149e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c90506000600654828161150e57fe5b0690508092505050919050565b6000825111801561156b57506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b61157457600080fd5b6001600081548092919060010191905055503360036000600154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055506040518060e001604052806001548152602001838152602001828152602001600163ffffffff168152602001600754420163ffffffff168152602001600061ffff168152602001600061ffff168152506002600060015481526020019081526020016000206000820151816000015560208201518160010190805190602001906116b4929190611aa0565b506040820151816002015560608201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060808201518160030160046101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160086101000a81548161ffff021916908361ffff16021790555060c082015181600301600a6101000a81548161ffff021916908361ffff1602179055509050507f275a59a3ef7732d7be8bd324a589e27b846a77e174622cbf2814d091468f478360015483836001600754420160008060405180888152602001806020018781526020018663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1681526020018361ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156118045780820151818401526020810190506117e9565b50505050905090810190601f1680156118315780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050565b6000600a60008154809291906001019190505550814233600a54604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c816118cf57fe5b069050919050565b60075442018160030160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561193b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260030160049054906101000a900463ffffffff1663ffffffff1611159050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a6157803560ff1916838001178555611a8f565b82800160010185558215611a8f579182015b82811115611a8e578235825591602001919060010190611a73565b5b509050611a9c9190611b20565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ae157805160ff1916838001178555611b0f565b82800160010185558215611b0f579182015b82811115611b0e578251825591602001919060010190611af3565b5b509050611b1c9190611b20565b5090565b611b4291905b80821115611b3e576000816000905550600101611b26565b5090565b9056fea265627a7a723158208612dc12e9616fc760190ae6079b9aa713e6f51c38c60832794dbc8526bb38ab64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100fe5760003560e01c8063715018a611610095578063aa914e6a11610064578063aa914e6a14610512578063c39cbef1146105da578063ccf670f81461066a578063e1fa7638146106a5578063f2fde38b146106ea576100fe565b8063715018a61461044a5780638da5cb5b146104615780638f32d59b146104b8578063a57ea378146104e7576100fe565b80633ccfd60b116100d15780633ccfd60b146102f75780634412e1041461030e5780635f4623f1146103b45780635faf288014610405576100fe565b80630ce90ec21461010357806317a7f4cc146101315780632052465e1461017657806327b7612f1461027c575b600080fd5b61012f6004803603602081101561011957600080fd5b810190808035906020019092919050505061073b565b005b34801561013d57600080fd5b506101746004803603604081101561015457600080fd5b81019080803590602001909291908035906020019092919050505061079b565b005b34801561018257600080fd5b506101af6004803603602081101561019957600080fd5b8101908080359060200190929190505050610926565b60405180888152602001806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b8381101561023b578082015181840152602081019050610220565b50505050905090810190601f1680156102685780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561028857600080fd5b506102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050610a3c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030357600080fd5b5061030c610a6f565b005b34801561031a57600080fd5b5061035d6004803603602081101561033157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aed565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103a0578082015181840152602081019050610385565b505050509050019250505060405180910390f35b3480156103c057600080fd5b50610403600480360360208110156103d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c17565b005b34801561041157600080fd5b506104486004803603604081101561042857600080fd5b810190808035906020019092919080359060200190929190505050610c5b565b005b34801561045657600080fd5b5061045f610d90565b005b34801561046d57600080fd5b50610476610e60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c457600080fd5b506104cd610e89565b604051808215151515815260200191505060405180910390f35b3480156104f357600080fd5b506104fc610ee0565b6040518082815260200191505060405180910390f35b34801561051e57600080fd5b506105d86004803603602081101561053557600080fd5b810190808035906020019064010000000081111561055257600080fd5b82018360208201111561056457600080fd5b8035906020019184600183028401116401000000008311171561058657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ee6565b005b3480156105e657600080fd5b50610668600480360360408110156105fd57600080fd5b81019080803590602001909291908035906020019064010000000081111561062457600080fd5b82018360208201111561063657600080fd5b8035906020019184600183028401116401000000008311171561065857600080fd5b9091929391929390505050610f0f565b005b34801561067657600080fd5b506106a36004803603602081101561068d57600080fd5b8101908080359060200190929190505050611050565b005b3480156106b157600080fd5b506106e8600480360360408110156106c857600080fd5b81019080803590602001909291908035906020019092919050505061106b565b005b3480156106f657600080fd5b506107396004803603602081101561070d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611290565b005b600954341461074957600080fd5b60026000828152602001908152602001600020600301600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561081157600080fd5b505afa158015610825573d6000803e3d6000fd5b505050506040513d61014081101561083c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061092183826040518060400160405280600581526020017f6b697474790000000000000000000000000000000000000000000000000000008152506112ad565b505050565b6002602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d85780601f106109ad576101008083540402835291602001916109d8565b820191906000526020600020905b8154815290600101906020018083116109bb57829003601f168201915b5050505050908060020154908060030160009054906101000a900463ffffffff16908060030160049054906101000a900463ffffffff16908060030160089054906101000a900461ffff169080600301600a9054906101000a900461ffff16905087565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a77610e89565b610a8057600080fd5b6000610a8a610e60565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610ae9573d6000803e3d6000fd5b5050565b606080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610b5e5781602001602082028038833980820191505090505b50905060008090506000600190505b6001548111610c0c578473ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bff5780838381518110610bea57fe5b60200260200101818152505081806001019250505b8080600101915050610b6d565b508192505050919050565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b601482816002600083815260200190815260200160002060030160009054906101000a900463ffffffff1663ffffffff161015610c9757600080fd5b836003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0357600080fd5b6003600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6e57600080fd5b8360026000878152602001908152602001600020600201819055505050505050565b610d98610e89565b610da157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015481565b6000815111610ef457600080fd5b6000610eff82611487565b9050610f0b828261151b565b5050565b600283816002600083815260200190815260200160002060030160009054906101000a900463ffffffff1663ffffffff161015610f4b57600080fd5b846003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fb757600080fd5b6003600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461102257600080fd5b8484600260008981526020019081526020016000206001019190611047929190611a20565b50505050505050565b611058610e89565b61106157600080fd5b8060098190555050565b816003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110d757600080fd5b6000600260008581526020019081526020016000209050600060026000858152602001908152602001600020905060006111116064611848565b9050600b5481116112105782600301600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600301600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600301600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505061120b8683600201546040518060400160405280600681526020017f7a6f6d62696500000000000000000000000000000000000000000000000000008152506112ad565b611288565b82600301600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600301600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff16021790555050611287836118d7565b5b505050505050565b611298610e89565b6112a157600080fd5b6112aa81611901565b50565b826003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461131957600080fd5b6000600260008681526020019081526020016000209050611339816119f9565b61134257600080fd5b600654848161134d57fe5b06935060006002858360020154018161136257fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b602083106113e357805182526020820191506020810190506020830392506113c0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156114375760636064828161143057fe5b0682030190505b6114766040518060400160405280600681526020017f4e6f4e616d6500000000000000000000000000000000000000000000000000008152508261151b565b61147f826118d7565b505050505050565b600080826040516020018082805190602001908083835b602083106114c1578051825260208201915060208101905060208303925061149e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c90506000600654828161150e57fe5b0690508092505050919050565b6000825111801561156b57506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b61157457600080fd5b6001600081548092919060010191905055503360036000600154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055506040518060e001604052806001548152602001838152602001828152602001600163ffffffff168152602001600754420163ffffffff168152602001600061ffff168152602001600061ffff168152506002600060015481526020019081526020016000206000820151816000015560208201518160010190805190602001906116b4929190611aa0565b506040820151816002015560608201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060808201518160030160046101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160086101000a81548161ffff021916908361ffff16021790555060c082015181600301600a6101000a81548161ffff021916908361ffff1602179055509050507f275a59a3ef7732d7be8bd324a589e27b846a77e174622cbf2814d091468f478360015483836001600754420160008060405180888152602001806020018781526020018663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1681526020018361ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156118045780820151818401526020810190506117e9565b50505050905090810190601f1680156118315780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050565b6000600a60008154809291906001019190505550814233600a54604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c816118cf57fe5b069050919050565b60075442018160030160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561193b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260030160049054906101000a900463ffffffff1663ffffffff1611159050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a6157803560ff1916838001178555611a8f565b82800160010185558215611a8f579182015b82811115611a8e578235825591602001919060010190611a73565b5b509050611a9c9190611b20565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ae157805160ff1916838001178555611b0f565b82800160010185558215611b0f579182015b82811115611b0e578251825591602001919060010190611af3565b5b509050611b1c9190611b20565b5090565b611b4291905b80821115611b3e576000816000905550600101611b26565b5090565b9056fea265627a7a723158208612dc12e9616fc760190ae6079b9aa713e6f51c38c60832794dbc8526bb38ab64736f6c634300050c0032",
  "sourceMap": "61:1250:2:-;;;125:1:3;98:28;;789:2;772:19;;822:9;;816:2;:15;798:33;;858:6;838:26;;170:11:6;152:29;;121:1:2;104:18;;161:2;129:34;;532:10:1;523:6;;:19;;;;;;;;;;;;;;;;;;587:6;;;;;;;;;;;554:40;;583:1;554:40;;;;;;;;;;;;61:1250:2;;;;;;",
  "deployedSourceMap": "61:1250:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;807:198:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;807:198:6;;;;;;;;;;;;;;;;;:::i;:::-;;1881:214:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1881:214:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1881:214:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;541:38:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;541:38:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;541:38:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;541:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;627:44:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;627:44:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;419:196:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;419:196:6;;;:::i;:::-;;1584:483;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1584:483:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1584:483:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1584:483:6;;;;;;;;;;;;;;;;;696:119:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;696:119:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;696:119:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1325:210:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1325:210:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1325:210:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1308:130:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1308:130:1;;;:::i;:::-;;658:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;658:72:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;956:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;956:85:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;98:28:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;98:28:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;916:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:166:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;916:166:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;916:166:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;916:166:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;916:166:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;916:166:3;;;;;;;;;;;;;;;:::i;:::-;;1068:224:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1068:224:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1068:224:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1068:224:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1068:224:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1068:224:6;;;;;;;;;;;;:::i;:::-;;679:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;679:89:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;679:89:6;;;;;;;;;;;;;;;;;:::i;:::-;;472:836:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;472:836:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;472:836:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1602:103:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1602:103:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1602:103:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;807:198:6;949:10;;936:9;:23;928:32;;;;;;971:7;:18;979:9;971:18;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;807:198;:::o;1881:214:4:-;1951:13;1997;;;;;;;;;;;:22;;;2020:8;1997:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1997:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1997:32:4;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1997:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:45;2058:9;2069:8;2042:45;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1881:214;;;:::o;541:38:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;627:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;419:196:6:-;849:9:1;:7;:9::i;:::-;841:18;;;;;;469:22:6;510:7;:5;:7::i;:::-;469:50;;567:6;:15;;:38;591:4;583:21;;;567:38;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;567:38:6;866:1:1;419:196:6:o;1584:483::-;1649:13;1675:20;1709:16;:24;1726:6;1709:24;;;;;;;;;;;;;;;;1698:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1698:36:6;;;;1675:59;;1745:10;1758:1;1745:14;;1814:6;1823:1;1814:10;;1809:227;1831:12;;1826:1;:17;1809:227;;1939:6;1921:24;;:11;:14;1933:1;1921:14;;;;;;;;;;;;;;;;;;;;;:24;;;1917:108;;;1982:1;1966:6;1973:5;1966:13;;;;;;;;;;;;;:17;;;;;2002:7;;;;;;;1917:108;1845:3;;;;;;;1809:227;;;;2053:6;2046:13;;;;1584:483;;;:::o;696:119:4:-;798:8;767:13;;:40;;;;;;;;;;;;;;;;;;696:119;:::o;1325:210:6:-;1394:2;1398:9;345:6;317:7;:18;325:9;317:18;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;309:43;;;;;;1417:9;645:11:4;:22;657:9;645:22;;;;;;;;;;;;;;;;;;;;;631:36;;:10;:36;;;623:45;;;;;;1461:11:6;:22;1473:9;1461:22;;;;;;;;;;;;;;;;;;;;;1447:36;;:10;:36;;;1439:45;;;;;;1520:7;1495;:18;1503:9;1495:18;;;;;;;;;;;:22;;:32;;;;363:1;1325:210;;;;:::o;1308:130:1:-;849:9;:7;:9::i;:::-;841:18;;;;;;1403:1;1366:40;;1387:6;;;;;;;;;;;1366:40;;;;;;;;;;;;1430:1;1413:6;;:19;;;;;;;;;;;;;;;;;;1308:130::o;658:72::-;695:7;718:6;;;;;;;;;;;711:13;;658:72;:::o;956:85::-;995:4;1029:6;;;;;;;;;;;1015:20;;:10;:20;;;1008:27;;956:85;:::o;98:28:3:-;;;;:::o;916:166::-;1000:1;984:5;978:19;:23;969:34;;;;;;1014:8;1025:13;1032:5;1025:6;:13::i;:::-;1014:24;;1049:25;1063:5;1070:3;1049:13;:25::i;:::-;916:166;;:::o;1068:224:6:-;1150:1;1153:9;345:6;317:7;:18;325:9;317:18;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;309:43;;;;;;1172:9;645:11:4;:22;657:9;645:22;;;;;;;;;;;;;;;;;;;;;631:36;;:10;:36;;;623:45;;;;;;1216:11:6;:22;1228:9;1216:22;;;;;;;;;;;;;;;;;;;;;1202:36;;:10;:36;;;1194:45;;;;;;1276:8;;1250:7;:18;1258:9;1250:18;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;363:1;1068:224;;;;;:::o;679:89::-;849:9:1;:7;:9::i;:::-;841:18;;;;;;756:4:6;743:10;:17;;;;679:89;:::o;472:836:2:-;537:9;645:11:4;:22;657:9;645:22;;;;;;;;;;;;;;;;;;;;;631:36;;:10;:36;;;623:45;;;;;;555:23:2;581:7;:18;589:9;581:18;;;;;;;;;;;555:44;;606:26;635:7;:18;643:9;635:18;;;;;;;;;;;606:47;;695:9;707:12;715:3;707:7;:12::i;:::-;695:24;;791;;783:4;:32;779:524;;928:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:8;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:11;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:53;1035:9;1046:11;:15;;;1019:53;;;;;;;;;;;;;;;;;:15;:53::i;:::-;779:524;;;1205:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:26;1286:8;1269:16;:26::i;:::-;779:524;679:1:4;;;472:836:2;;;:::o;1602:103:1:-;849:9;:7;:9::i;:::-;841:18;;;;;;1671:28;1690:8;1671:18;:28::i;:::-;1602:103;:::o;1245:628:4:-;1345:9;645:11;:22;657:9;645:22;;;;;;;;;;;;;;;;;;;;;631:36;;:10;:36;;;623:45;;;;;;1366:23;1392:7;:18;1400:9;1392:18;;;;;;;;;;;1366:44;;1456:18;1465:8;1456;:18::i;:::-;1448:27;;;;;;1512:10;;1499;:23;;;;;;1486:36;;1533:11;1577:1;1563:10;1548:8;:12;;;:25;1547:31;;;;;;1533:45;;1644:25;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1644:25:4;;;1634:36;;;;;;1620:8;1603:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1603:26:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1603:26:4;;;1593:37;;;;;;:77;1589:145;;;1720:2;1714:3;1705:6;:12;;;;;;1696:6;:21;:26;1687:35;;1589:145;1773:31;;;;;;;;;;;;;;;;;;1797:6;1773:13;:31::i;:::-;1839:26;1856:8;1839:16;:26::i;:::-;679:1;;1245:628;;;;:::o;1629:190:3:-;1686:4;1702:8;1745:4;1728:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1728:22:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1728:22:3;;;1718:33;;;;;;1713:39;;1702:50;;1763:8;1780:10;;1774:3;:16;;;;;;1763:27;;1808:3;1801:10;;;;1629:190;;;:::o;1134:449::-;1234:1;1218:5;1212:19;:23;1211:64;;;;;1273:1;1241:16;:28;1258:10;1241:28;;;;;;;;;;;;;;;;:33;1211:64;1203:73;;;;;;1287:12;;:14;;;;;;;;;;;;;1340:10;1312:11;:25;1324:12;;1312:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1361:16;:28;1378:10;1361:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;1426:65;;;;;;;;1433:12;;1426:65;;;;1446:5;1426:65;;;;1452:3;1426:65;;;;1457:1;1426:65;;;;;;1473:12;;1467:3;:18;1426:65;;;;;;1487:1;1426:65;;;;;;1489:1;1426:65;;;;;1402:7;:21;1410:12;;1402:21;;;;;;;;;;;:89;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1507:68;1517:12;;1530:5;1536:3;1541:1;1557:12;;1551:3;:18;1571:1;1573;1507:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1507:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:449;;:::o;245:165:2:-;294:4;307:9;;:11;;;;;;;;;;;;;396:8;364:3;369:10;381:9;;347:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;347:44:2;;;337:55;;;;;;332:61;;:72;;;;;;325:79;;245:165;;;:::o;853:124:4:-;956:12;;950:3;:18;923:7;:17;;;:46;;;;;;;;;;;;;;;;;;853:124;:::o;1842:173:1:-;1932:1;1912:22;;:8;:22;;;;1904:31;;;;;;1976:8;1947:38;;1968:6;;;;;;;;;;;1947:38;;;;;;;;;;;;2001:8;1992:6;;:17;;;;;;;;;;;;;;;;;;1842:173;:::o;1036:123:4:-;1101:4;1147:3;1126:7;:17;;;;;;;;;;;;:24;;;;1118:33;;1036:123;;;:::o;61:1250:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.12;\r\n\r\nimport \"./zombiehelper.sol\";\r\n\r\ncontract ZombieAttack is ZombieHelper {\r\n  uint randNonce = 0;\r\n\r\n  uint attackVictoryProbability = 70;\r\n\r\n//Generates a random number with a process to secure from similar outputs\r\n  function randMod(uint _modulus) internal returns(uint) {\r\n    randNonce++;\r\n    return uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))) % _modulus;\r\n  }\r\n\r\n//Attack function in a battle runs if modifier matches\r\n  function attack(uint _zombieId, uint _targetId) external ownerOf(_zombieId) {\r\n    Zombie storage myZombie = zombies[_zombieId];\r\n    Zombie storage enemyZombie = zombies[_targetId];\r\n    //Random number btww 0 to 100\r\n    uint rand = randMod(100);\r\n    //If random number is less than or equals to 70\r\n    if (rand <= attackVictoryProbability) {\r\n        //Your win and attacker loss count increased and new zombie added whose owner is attacker \r\n        myZombie.winCount++;\r\n        myZombie.level++;\r\n        enemyZombie.lossCount++;\r\n        feedAndMultiply(_zombieId, enemyZombie.dna, \"zombie\");\r\n    }\r\n    //If greater than 70\r\n    else {\r\n        //Your loss and attacker's win count incremented and cooldown added\r\n        myZombie.lossCount++;\r\n        enemyZombie.winCount++;\r\n        _triggerCooldown(myZombie);\r\n    }\r\n  }\r\n}\r\n",
  "sourcePath": "D:/Studies/Projects/Zombie/src/contracts/ZombieAttack.sol",
  "ast": {
    "absolutePath": "/D/Studies/Projects/Zombie/src/contracts/ZombieAttack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        273
      ]
    },
    "id": 274,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 167,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:2"
      },
      {
        "absolutePath": "/D/Studies/Projects/Zombie/src/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 168,
        "nodeType": "ImportDirective",
        "scope": 274,
        "sourceUnit": 1052,
        "src": "29:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 169,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1051,
              "src": "86:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$1051",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 170,
            "nodeType": "InheritanceSpecifier",
            "src": "86:12:2"
          }
        ],
        "contractDependencies": [
          165,
          464,
          655,
          1051
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 273,
        "linearizedBaseContracts": [
          273,
          1051,
          655,
          464,
          165
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 173,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "104:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 171,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "104:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 172,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "121:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 176,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "129:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 174,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "129:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "161:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "300:110:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "307:11:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 183,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "307:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "307:11:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 190,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1068,
                                  "src": "364:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 191,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1066,
                                    "src": "369:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "369:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 193,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 173,
                                  "src": "381:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 188,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1053,
                                  "src": "347:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "347:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "347:44:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 187,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "337:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "337:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "332:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "332:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "396:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "332:72:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 182,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "325:79:2"
                }
              ]
            },
            "documentation": null,
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "262:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:15:2"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "294:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:6:2"
            },
            "scope": 273,
            "src": "245:165:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "548:760:2",
              "statements": [
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "555:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 211,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 296,
                        "src": "555:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "581:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Zombie_$296_storage_$",
                        "typeString": "mapping(uint256 => struct ZombieFactory.Zombie storage ref)"
                      }
                    },
                    "id": 215,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 214,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "589:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "581:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$296_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "555:44:2"
                },
                {
                  "assignments": [
                    218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 218,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "606:26:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 217,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 296,
                        "src": "606:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 219,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "635:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Zombie_$296_storage_$",
                        "typeString": "mapping(uint256 => struct ZombieFactory.Zombie storage ref)"
                      }
                    },
                    "id": 221,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "643:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "635:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$296_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "606:47:2"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "695:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "695:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:3:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 225,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "707:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "695:24:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 229,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "783:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 230,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "791:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "783:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 269,
                    "nodeType": "Block",
                    "src": "1117:186:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1205:20:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "1205:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "1205:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "1205:20:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1236:22:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 260,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "1236:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 293,
                            "src": "1236:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "1236:22:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 266,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "1286:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 265,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "1269:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$296_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1269:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "1269:26:2"
                      }
                    ]
                  },
                  "id": 270,
                  "nodeType": "IfStatement",
                  "src": "779:524:2",
                  "trueBody": {
                    "id": 254,
                    "nodeType": "Block",
                    "src": "817:263:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "928:19:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 232,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "928:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 293,
                            "src": "928:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "928:19:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "958:16:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 237,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "958:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 289,
                            "src": "958:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "958:16:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "985:23:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "985:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "985:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 246,
                        "nodeType": "ExpressionStatement",
                        "src": "985:23:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 248,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "1035:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 249,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 218,
                                "src": "1046:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 287,
                              "src": "1046:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1063:8:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 247,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 629,
                            "src": "1019:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1019:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "1019:53:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 208,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "537:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 209,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 207,
                  "name": "ownerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "529:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "529:18:2"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "488:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "504:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "487:32:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:0:2"
            },
            "scope": 273,
            "src": "472:836:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 274,
        "src": "61:1250:2"
      }
    ],
    "src": "0:1313:2"
  },
  "legacyAST": {
    "absolutePath": "/D/Studies/Projects/Zombie/src/contracts/ZombieAttack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        273
      ]
    },
    "id": 274,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 167,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:2"
      },
      {
        "absolutePath": "/D/Studies/Projects/Zombie/src/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 168,
        "nodeType": "ImportDirective",
        "scope": 274,
        "sourceUnit": 1052,
        "src": "29:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 169,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1051,
              "src": "86:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$1051",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 170,
            "nodeType": "InheritanceSpecifier",
            "src": "86:12:2"
          }
        ],
        "contractDependencies": [
          165,
          464,
          655,
          1051
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 273,
        "linearizedBaseContracts": [
          273,
          1051,
          655,
          464,
          165
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 173,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "104:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 171,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "104:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 172,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "121:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 176,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "129:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 174,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "129:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "161:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "300:110:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "307:11:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 183,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "307:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "307:11:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 190,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1068,
                                  "src": "364:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 191,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1066,
                                    "src": "369:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "369:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 193,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 173,
                                  "src": "381:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 188,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1053,
                                  "src": "347:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "347:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "347:44:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 187,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "337:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "337:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "332:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "332:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 197,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "396:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "332:72:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 182,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "325:79:2"
                }
              ]
            },
            "documentation": null,
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "262:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:15:2"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "294:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "293:6:2"
            },
            "scope": 273,
            "src": "245:165:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "548:760:2",
              "statements": [
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "555:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 211,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 296,
                        "src": "555:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "581:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Zombie_$296_storage_$",
                        "typeString": "mapping(uint256 => struct ZombieFactory.Zombie storage ref)"
                      }
                    },
                    "id": 215,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 214,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "589:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "581:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$296_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "555:44:2"
                },
                {
                  "assignments": [
                    218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 218,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "606:26:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 217,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 296,
                        "src": "606:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 219,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "635:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Zombie_$296_storage_$",
                        "typeString": "mapping(uint256 => struct ZombieFactory.Zombie storage ref)"
                      }
                    },
                    "id": 221,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "643:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "635:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$296_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "606:47:2"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "695:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "695:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:3:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 225,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "707:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "695:24:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 229,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "783:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 230,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "791:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "783:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 269,
                    "nodeType": "Block",
                    "src": "1117:186:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1205:20:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "1205:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "1205:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "1205:20:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1236:22:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 260,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "1236:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 293,
                            "src": "1236:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "1236:22:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 266,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "1286:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 265,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "1269:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$296_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1269:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "1269:26:2"
                      }
                    ]
                  },
                  "id": 270,
                  "nodeType": "IfStatement",
                  "src": "779:524:2",
                  "trueBody": {
                    "id": 254,
                    "nodeType": "Block",
                    "src": "817:263:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "928:19:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 232,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "928:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 293,
                            "src": "928:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "928:19:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "958:16:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 237,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "958:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 289,
                            "src": "958:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "958:16:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "985:23:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "985:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 295,
                            "src": "985:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 246,
                        "nodeType": "ExpressionStatement",
                        "src": "985:23:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 248,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "1035:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 249,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 218,
                                "src": "1046:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$296_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 287,
                              "src": "1046:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1063:8:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 247,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 629,
                            "src": "1019:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1019:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "1019:53:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 208,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 203,
                    "src": "537:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 209,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 207,
                  "name": "ownerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "529:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "529:18:2"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "488:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "504:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "487:32:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:0:2"
            },
            "scope": 273,
            "src": "472:836:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 274,
        "src": "61:1250:2"
      }
    ],
    "src": "0:1313:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xcd8ddfc9983b4b1e5fe91c09455959df73b887e91b6a0d35dcdad4efb76ca51e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dna",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "level",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "readyTime",
              "type": "uint32"
            }
          ],
          "name": "NewZombie",
          "type": "event",
          "signature": "0xcd8ddfc9983b4b1e5fe91c09455959df73b887e91b6a0d35dcdad4efb76ca51e"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x275a59a3ef7732d7be8bd324a589e27b846a77e174622cbf2814d091468f4783": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dna",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "level",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "readyTime",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "winCount",
              "type": "uint16"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "lossCount",
              "type": "uint16"
            }
          ],
          "name": "NewZombie",
          "type": "event",
          "signature": "0x275a59a3ef7732d7be8bd324a589e27b846a77e174622cbf2814d091468f4783"
        }
      },
      "links": {},
      "address": "0xa0b1B7ff163F7917F3924BAC7131e9B4697acacF",
      "transactionHash": "0x4086850adcd5c97e78d8c22cf204a6d6f151b4fa96771c144528a63d8c8e9bf4"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2021-08-22T13:50:12.509Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}